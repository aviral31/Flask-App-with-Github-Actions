name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - staging   # Deploy to staging on pushes
      - main      # Only build & test on main push
  release:
    types: [published]  # Deploy to production on new release

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: Set up Python
        uses: actions/setup-python@v5   
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

      - name: Build (package app)
        run: |
          echo "Building Flask app..."
          tar -czf flask_app.tar.gz *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: flask_app
          path: flask_app.tar.gz

  deploy-staging:
    needs: build-test
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4  
        with:
          name: flask_app

      - name: Copy files to Staging EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: flask_app.tar.gz
          target: /home/ubuntu/

      - name: Deploy to Staging EC2
        uses: appleboy/ssh-action@v1.2.0   
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            mkdir -p ~/flask-staging
            tar -xzf flask_app.tar.gz -C ~/flask-staging
            cd ~/flask-staging
            sudo apt-get update -y
            sudo apt-get install -y python3-venv
            python3 -m venv venv
            ./venv/bin/pip install --upgrade pip
            ./venv/bin/pip install -r requirements.txt
            nohup ./venv/bin/python flask_app.py > app.log 2>&1 &

      - name: Verify Flask App on Staging
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            ps aux | grep flask_app.py
            sleep 15
            curl -I http://localhost:5000 || echo "Flask app not reachable"

  deploy-production:
    needs: build-test
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4  
        with:
          name: flask_app

      - name: Copy files to Production EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: flask_app.tar.gz
          target: /home/ubuntu/

      - name: Deploy to Production EC2
        uses: appleboy/ssh-action@v1.2.0  
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            mkdir -p ~/flask-prod
            tar -xzf flask_app.tar.gz -C ~/flask-prod
            cd ~/flask-prod
            sudo apt-get update -y
            sudo apt-get install -y python3-venv
            python3 -m venv venv
            ./venv/bin/pip install --upgrade pip
            ./venv/bin/pip install -r requirements.txt
            nohup ./venv/bin/python flask_app.py > app.log 2>&1 &

      - name: Verify Flask App on Production
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            ps aux | grep flask_app.py
            sleep 15
            curl -I http://localhost:5000 || echo "Flask app not reachable"
